
image: node:16

pipelines:
  branches:
    master:
      - parallel:
        - step:
            name: Install and Build Frontend
            caches:
              - node
            script:
              - cd frontend
              - npm install
              - npm run build
              - ls dist/
            artifacts:
              - frontend/dist/**
            condition:
              changesets:
                  includePaths:
                    # any changes in frontend directory
                    - "frontend/**"
        - step:
            name: Install Backend
            caches:
              - node
            script:
              - cd backend
              - npm install
            condition:
              changesets:
                  includePaths:
                    # any changes in backend directory
                    - "backend/**"
        - step:
            name: Security Scan
            script:
              # Run a security scan for sensitive data.
              # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
              - pipe: atlassian/git-secrets-scan:0.5.1
      # Front
      - step:
          name: Deploy Frontend to Production
          clone:
            enabled: false
          script:
            # sync your files to S3
            - pipe: atlassian/aws-s3-deploy:1.1.0
              variables:
                AWS_ACCESS_KEY_ID: $AWS_FRONTEND_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_FRONTEND_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                S3_BUCKET: $AWS_BUKET_NAME
                CACHE_CONTROL: 'max-age=31536000'
                LOCAL_PATH: 'frontend/dist'
            # triggering a distribution invalidation to refresh the CDN caches
            - pipe: atlassian/aws-cloudfront-invalidate:0.6.0
              variables:
                AWS_ACCESS_KEY_ID: $AWS_FRONTEND_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_FRONTEND_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                DISTRIBUTION_ID: $AWS_DISTRIBUTION_ID
          condition:
              changesets:
                  includePaths:
                    # any changes in frontend directory
                    - "frontend/**"
      # Back
      # Follows: https://bitbucket.org/blog/automating-serverless-framework-deployments-using-bitbucket-pipelines
      - step:
          name: Deploy Backend to Production
          image: node:16-alpine3.14
          caches:
            - node
          script:
            - apk add python3
            - npm install -g serverless
            - cd backend
            - npm install
            - serverless config credentials --provider aws --key $AWS_BACKEND_ACCESS_KEY_ID --secret $AWS_BACKEND_SECRET_ACCESS_KEY
            - serverless deploy
          condition:
              changesets:
                  includePaths:
                    # any changes in backend directory
                    - "backend/**"
      # Docs
      - step:
            name: Export docs artifacts
            script:
              - ls docs/api-spec/
            artifacts:
              - docs/api-spec/**
            condition:
              changesets:
                  includePaths:
                    # any changes in api docs directory
                    - "docs/api-spec/**"
      - step:
          name: Deploy Docs to Production
          clone:
            enabled: false
          script:
            # sync your files to S3
            - pipe: atlassian/aws-s3-deploy:1.1.0
              variables:
                AWS_ACCESS_KEY_ID: $AWS_DOCS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_DOCS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                S3_BUCKET: $AWS_DOCS_BUKET_NAME
                CACHE_CONTROL: 'max-age=31536000'
                LOCAL_PATH: 'docs/api-spec'
            # triggering a distribution invalidation to refresh the CDN caches
            - pipe: atlassian/aws-cloudfront-invalidate:0.6.0
              variables:
                AWS_ACCESS_KEY_ID: $AWS_DOCS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_DOCS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                DISTRIBUTION_ID: $AWS_DOCS_DISTRIBUTION_ID
          condition:
              changesets:
                  includePaths:
                    # any changes in api docs directory
                    - "docs/api-spec/**"